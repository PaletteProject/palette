name: Build Checks

# trigger on PRs into main or dev and pushes to main or dev
on:
  push:
    branches:
      - main
      - dev

  pull_request:
    branches:
      - main
      - dev

jobs:
  # Run ESLint on the project
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Node setup
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: npm ci

      # Ensure the project builds
      - name: Build project
        run: npm run build:all

        # Check that the code runs in Node (will catch missing .js file extensions)
      - name: Validate Node
        run: node backend/src/validateNode.js

      - name: Run ESLint
        run: npm run lint

  # Run Prettier checks
  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Node setup
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier
        run: npm run prettier:check

  # Run Jest tests
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Node setup
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: npm ci

      # Ensure the project builds
      - name: Build project
        run: npm run build:all

      - name: Test Suites
        run: npm run test:ci

  # Check for accidental root dependencies
  check-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Node setup
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: npm ci

      - name: Inspect root package.json for dependencies
        run: |
          if jq -e '.dependencies' package.json > /dev/null; then
            echo "Error: Root package.json should not contain dependencies."
            exit 1
          fi

      - name: Ensure only 'concurrently' is in devDependencies
        run: |
          if [[ $(jq -r '.devDependencies | keys_unsorted | .[]' package.json | grep -v '^concurrently$') ]]; then
            echo "Error: Only 'concurrently' is allowed in devDependencies in root package.json."
            exit 1
          fi
